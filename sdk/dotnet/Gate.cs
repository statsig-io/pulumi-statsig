// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Statsig.Pulumi
{
    /// <summary>
    /// This resource allows you to configure gates for your Statsig project.
    /// 
    /// To learn more about gates, see [Gates Documentation](https://docs.statsig.com/feature-flags/)
    /// 
    /// To learn more about the API powering this resource, see [Gates API Documentation](https://docs.statsig.com/console-api/gates)
    /// </summary>
    [PulumiResourceType("statsig:index/gate:Gate")]
    public partial class Gate : global::Pulumi.CustomResource
    {
        [Output("creatorEmail")]
        public Output<string> CreatorEmail { get; private set; } = null!;

        [Output("creatorId")]
        public Output<string> CreatorId { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("idType")]
        public Output<string> IdType { get; private set; } = null!;

        [Output("isEnabled")]
        public Output<bool> IsEnabled { get; private set; } = null!;

        [Output("measureMetricLifts")]
        public Output<bool> MeasureMetricLifts { get; private set; } = null!;

        [Output("monitoringMetrics")]
        public Output<ImmutableArray<Outputs.GateMonitoringMetric>> MonitoringMetrics { get; private set; } = null!;

        /// <summary>
        /// id
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("rules")]
        public Output<ImmutableArray<Outputs.GateRule>> Rules { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        [Output("targetApps")]
        public Output<ImmutableArray<string>> TargetApps { get; private set; } = null!;

        [Output("team")]
        public Output<string> Team { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Gate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Gate(string name, GateArgs? args = null, CustomResourceOptions? options = null)
            : base("statsig:index/gate:Gate", name, args ?? new GateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Gate(string name, Input<string> id, GateState? state = null, CustomResourceOptions? options = null)
            : base("statsig:index/gate:Gate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Gate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Gate Get(string name, Input<string> id, GateState? state = null, CustomResourceOptions? options = null)
        {
            return new Gate(name, id, state, options);
        }
    }

    public sealed class GateArgs : global::Pulumi.ResourceArgs
    {
        [Input("creatorEmail")]
        public Input<string>? CreatorEmail { get; set; }

        [Input("creatorId")]
        public Input<string>? CreatorId { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("idType")]
        public Input<string>? IdType { get; set; }

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("measureMetricLifts")]
        public Input<bool>? MeasureMetricLifts { get; set; }

        [Input("monitoringMetrics")]
        private InputList<Inputs.GateMonitoringMetricArgs>? _monitoringMetrics;
        public InputList<Inputs.GateMonitoringMetricArgs> MonitoringMetrics
        {
            get => _monitoringMetrics ?? (_monitoringMetrics = new InputList<Inputs.GateMonitoringMetricArgs>());
            set => _monitoringMetrics = value;
        }

        /// <summary>
        /// id
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rules")]
        private InputList<Inputs.GateRuleArgs>? _rules;
        public InputList<Inputs.GateRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.GateRuleArgs>());
            set => _rules = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("targetApps")]
        private InputList<string>? _targetApps;
        public InputList<string> TargetApps
        {
            get => _targetApps ?? (_targetApps = new InputList<string>());
            set => _targetApps = value;
        }

        [Input("team")]
        public Input<string>? Team { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public GateArgs()
        {
        }
        public static new GateArgs Empty => new GateArgs();
    }

    public sealed class GateState : global::Pulumi.ResourceArgs
    {
        [Input("creatorEmail")]
        public Input<string>? CreatorEmail { get; set; }

        [Input("creatorId")]
        public Input<string>? CreatorId { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("idType")]
        public Input<string>? IdType { get; set; }

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("measureMetricLifts")]
        public Input<bool>? MeasureMetricLifts { get; set; }

        [Input("monitoringMetrics")]
        private InputList<Inputs.GateMonitoringMetricGetArgs>? _monitoringMetrics;
        public InputList<Inputs.GateMonitoringMetricGetArgs> MonitoringMetrics
        {
            get => _monitoringMetrics ?? (_monitoringMetrics = new InputList<Inputs.GateMonitoringMetricGetArgs>());
            set => _monitoringMetrics = value;
        }

        /// <summary>
        /// id
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rules")]
        private InputList<Inputs.GateRuleGetArgs>? _rules;
        public InputList<Inputs.GateRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.GateRuleGetArgs>());
            set => _rules = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("targetApps")]
        private InputList<string>? _targetApps;
        public InputList<string> TargetApps
        {
            get => _targetApps ?? (_targetApps = new InputList<string>());
            set => _targetApps = value;
        }

        [Input("team")]
        public Input<string>? Team { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public GateState()
        {
        }
        public static new GateState Empty => new GateState();
    }
}
