// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Statsig.Inputs
{

    public sealed class GateRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout
        /// </summary>
        [Input("baseId")]
        public Input<string>? BaseId { get; set; }

        [Input("conditions", required: true)]
        private InputList<Inputs.GateRuleConditionArgs>? _conditions;

        /// <summary>
        /// An array of Condition objects.
        /// </summary>
        public InputList<Inputs.GateRuleConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.GateRuleConditionArgs>());
            set => _conditions = value;
        }

        [Input("environments")]
        private InputList<string>? _environments;

        /// <summary>
        /// The environments this rule is enabled for.
        /// </summary>
        public InputList<string> Environments
        {
            get => _environments ?? (_environments = new InputList<string>());
            set => _environments = value;
        }

        /// <summary>
        /// The Statsig ID of this rule.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of this rule.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Of the users that meet the conditions of this rule, what percent should return true.
        /// </summary>
        [Input("passPercentage", required: true)]
        public Input<double> PassPercentage { get; set; } = null!;

        /// <summary>
        /// The return value of the rule.
        /// </summary>
        [Input("returnValue")]
        public Input<Inputs.GateRuleReturnValueArgs>? ReturnValue { get; set; }

        public GateRuleArgs()
        {
        }
        public static new GateRuleArgs Empty => new GateRuleArgs();
    }
}
